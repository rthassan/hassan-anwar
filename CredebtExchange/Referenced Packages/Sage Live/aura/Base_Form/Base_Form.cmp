<!--
 - Created by dancolq on 21/08/2016.
 -->


<aura:component description="Base_Form" controller="s2cor.Sage_COR_Form_Helper" extends="s2cor:Base_Modal_Content" extensible="true" access="global" implements="force:hasRecordId">

    <aura:attribute name="mode" type="string" default="view" description="The type of the form - options: edit, view, new, inline (edit only, view only, new only, inline)"/>    <!--dc todo : investigate if it is possible to-->
    <aura:attribute name="recordId" type="Id"  description="If the recordId is supplied the getRecord call will automatically get the type of the object and return it"/>
    <aura:attribute name="sObjectType" type="string" description="This can be used to get the "/>
    <aura:attribute name="scope" type="object" description="This is the main object that contains all the data for the form to work"/>
    <aura:attribute name="generic" type="object" description="This is the main object that contains all the data for the form to work"/>
    <aura:attribute name="fieldList" type="string" default="" description="list of fields to be used in the query. eg. 'field1,field2,field3'"/>
    <aura:attribute name="additionalFields" type="string" default="" description="list of fields to be used in the query. This is to be used if the fieldList is not set and all the default fields are added"/>
    <aura:attribute name="defaultGetRecord" type="boolean" default="true" description="Call the default Get Record method"/>
    <aura:attribute name="defaultNewRecord" type="boolean" default="true" description="Call the default Get new record method - ObjectType or RecordId is required. The record id is used to just get the object type"/>
    <aura:attribute name="state" type="string" description="This stores the current state of the form,  loading, saving"/>
    <aura:attribute name="refreshViewOnSave" type="boolean" description="After record has been saved - refreh the current view if true"/>
    <aura:attribute name="debounceTimeout" type="integer" default="0" description="This sets the debounce timeout for all of the control inputs"/>
    <aura:attribute name="updateBoundFieldsOn" type="string" default="onblur" description="This will update bound fields with on the controls event you choose - this defaults to onblur. i.e. When field looses focus"/>
    <aura:attribute name="busy" type="boolean" default="false" description="This will apply an overlay if the page content is busy"/>
    <aura:attribute name="loaded" type="boolean" default="false"/>
    <aura:attribute name="reRenderFlag" type="string" />
    <aura:attribute name="layoutClass" type="string" default="slds-col--padded slds-size--1-of-1 slds-medium-size--1-of-2 slds-large-size--1-of-2"/>
    <aura:attribute name="showInlineEditButtons" type="boolean" default="true" description="This will show the default inline edit buttons.  The save button will attempt to save any object associated with the sObjectType field"/>
    <aura:attribute name="showEditButtons" type="boolean" default="true" description="If the for is in view mode then this will determin if it is shows the edit buttons or not"/>


    <!--Modal Attributes-->
    <!--recordIds-->
    <!--title-->
    <!--uid-->
    <!---->

    <aura:attribute name="title" type="String" />
    <aura:attribute name="recordIds" type="object" />
    <aura:attribute name="uid" type="String" />

    <aura:handler name="init" value="{!this}" action="{!c.doInit}" />

    <!--Should improves performance when attempting to get many components-->
    <aura:dependency resource="markup://lightning:input" />
    <aura:dependency resource="markup://aura:HTML"/>
    <aura:dependency resource="markup://aura:text"/>

    <div>
        <div class="{!if(v.busy==true,'overlay','')}">
            {!v.body}
            <aura:if isTrue="{!v.showInlineEditButtons == true}">
                <s2cor:Form_Buttons_Inline_Edit rendered="{!v.scope.Account.mode=='inline-edit'}" onCancel="{!c.cancelInlineEditCont}" onSaveInlineEdit="{!c.saveInlineEdit}"/>
            </aura:if>
        </div>
    </div>
</aura:component>