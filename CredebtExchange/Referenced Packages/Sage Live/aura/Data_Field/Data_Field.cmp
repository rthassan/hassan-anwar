<!--
 - Created by daniel.colquhoun on 18/11/2016.
 -->

<!--dc todo :  enable the user to press the enter key to finiish and go t-->

<aura:component description="Data_Field">
    <!--lightning:input attributes -->
    <!--Some of these fields should be automatically populated depending on the Data Field Attributes -->
    <aura:attribute name="accesskey" type="String" description="Specifies a shortcut key to activate or focus an element."/>
    <aura:attribute name="checked" type="Boolean" description="Specifies whether the checkbox is checked. This value defaults to false."/>
    <aura:attribute name="class" type="String" description="A CSS class for the outer element, in addition to the component's base classes."/>
    <aura:attribute name="disabled"	type="Boolean" description="Specifies that an input element should be disabled. This value defaults to false."/>
    <aura:attribute name="formatter" type="String" description="String value with the formatter to be used."/>
    <aura:attribute name="label" type="String" description="Text label for the input.	" default=" " />  <!--lightning:component Required-->
    <aura:attribute name="max" type="Decimal" description="Expected higher bound for the value in Floating-Point number"/>
    <aura:attribute name="maxlength" type="Integer" description="The maximum number of characters allowed in the field."/>
    <aura:attribute name="messageWhenBadInput" type="String" description="Error message to be displayed when a bad input is detected."/>
    <aura:attribute name="messageWhenPatternMismatch" type="String" description="Error message to be displayed when a pattern mismatch is detected."/>
    <aura:attribute name="messageWhenRangeOverflow" type="String" description="Error message to be displayed when a range overflow is detected."/>
    <aura:attribute name="messageWhenRangeUnderflow" type="String" description="Error message to be displayed when a range underflow is detected."/>
    <aura:attribute name="messageWhenStepMismatch" type="String" description="Error message to be displayed when a step mismatch is detected."/>
    <aura:attribute name="messageWhenTooLong" type="String" description="Error message to be displayed when the value is too long."/>
    <aura:attribute name="messageWhenTypeMismatch" type="String" description="Error message to be displayed when a type mismatch is detected."/>
    <aura:attribute name="messageWhenValueMissing" type="String" description="Error message to be displayed when the value is missing."/>
    <aura:attribute name="min" type="Decimal" description="Expected lower bound for the value in Floating-Point number"/>
    <aura:attribute name="minlength" type="Integer" description="The minimum number of characters allowed in the field."/>
    <aura:attribute name="name" type="String" description="Specifies the name of an input element.Yes" default=" " /> <!--lightning:component Required-->
    <aura:attribute name="onblur" type="Aura.Action" description="he action triggered when the element releases focus."/>  <!--https://developer.salesforce.com/forums/?id=906F0000000Bas3IAC-->
    <aura:attribute name="onchange"	type="Aura.Action" description="The action triggered when a value attribute changes."/>
    <aura:attribute name="onfocus" type="Aura.Action" description="The action triggered when the element receives focus."/>
    <aura:attribute name="pattern" type="String" description="Specifies the regular expression that the input's value is checked against. This attributed is supported for text, date, search, url, tel, email, and password types."/>
    <aura:attribute name="placeholder" type="String" description="Text that is displayed when the field is empty, to prompt the user for a valid entry."/>
    <aura:attribute name="readonly" type="Boolean" description="Specifies that an input field is read-only. This value defaults to false."/>
    <aura:attribute name="required" type="Boolean" description="Specifies that an input field must be filled out before submitting the form. This value defaults to false."/>
    <aura:attribute name="step" type="Object" description="Granularity of the value in Positive Floating Point. Use 'any' when granularity is not a concern."/><!-- dc todo - find out what this does-->
    <aura:attribute name="tabindex" type="Integer" description="Specifies the tab order of an element (when the tab button is used for navigating)."/>
    <aura:attribute name="type" type="String" description="The type of the input. This value defaults to text."/>
    <aura:attribute name="validity" type="Object" description="Represents the validity states that an element can be in, with respect to constraint validation."/>
    <aura:attribute name="value" type="Object" description="Specifies the value of an input element."/>
    <!--lightning:input attributes -->

    <!--Data Field Attributes - These field control the business logic, data and behaviour of this component-->
    <aura:attribute name="intialised" type="boolean" default="false"/>
    <aura:attribute name="doneRendering" type="boolean" default="false"/>
    <aura:attribute name="rendered" type="boolean" default="true" description="display or not display this component"/>
    <aura:attribute name="scope" type="object" access="public"  />
    <aura:attribute name="fieldName" type="string"/>
    <aura:attribute name="index" type="integer"/>
    <aura:attribute name="autoBind" type="boolean" default="false" description="This is used to bind with dynamicly created objects,e.g. within itterations or other methods"/>
    <aura:attribute name="mode" type="string"/>
    <aura:attribute name="loaded" type="string" description="This is used to cause a granular loading event fire"  />
    <aura:attribute name="valid" type="boolean" default="true" description="If the field has a valid schema and data scope"/>
    <aura:attribute name="previousValue" type="object" />
    <aura:attribute name="labelStyle" type="string" />
    <aura:attribute name="internalStyle" type="string" />
    <aura:attribute name="context" type="object" description="This can be used to get the context of this object"/>
    <aura:attribute name="isReference" type="boolean" default="false" description="Temporay attribute until we get the lookup contorl"/>
    <aura:attribute name="actionDto" type="object"/>
    <aura:attribute name="bold" type="boolean" default="false" description="Implements bold class on value"/>

    <aura:attribute name="prefix" type="String" default=""/>
    <aura:attribute name="decimalPlaces" type="integer" default=""/>
    <aura:attribute name="inputComponentId" type="object"/>
    <aura:attribute name="showEdit" type="boolean" default="true" description="This will show or hide the edit button if within view mode" />
    <!--<aura:handler name="change" value="{!v.value}" action="{!c.dirtyfield}"/>-->


    <!--&lt;!&ndash;<aura:attribute name="applyTimeout" type="boolean" default="false" />&ndash;&gt;  this is done on the form level-->
    <aura:attribute name="debounceTimeout" type="integer" description="The developer is able to set the deboucee time out level on the indiviudal component"/>
    <aura:attribute name="timeOutFunc" type="object" access="private"/>

    <aura:attribute name="dataChangeDirection" type="string" access="private" description="This dertmins how the data has changed - from this component, or external from this component"/>
    <aura:handler name="change" value="{!v.scope.loaded}" action="{!c.dataChange}"/>
    <aura:handler name="change" value="{!v.rendered}" action="{!c.firstRender}"/>
    <aura:handler name="init" value="{!this}" action="{!c.doInit}" />

    <aura:dependency resource="markup://aura:HTML"/>
    <aura:dependency resource="markup://aura:text"/>


    <aura:if isTrue="{!v.rendered}">
        <div  class="{!v.internalStyle}">
            <!--<aura:if isTrue="{!and(v.scope.loaded ==true,v.rendered==true)}">-->
            <div class="{!if(or(v.scope.mode=='view',v.showEdit==false),' slds-hide','')  }">
                    <span class="{!if(v.disabled==true,'disabled','') + if(or(v.type=='currency',v.type=='number'),' number-align','') + if(v.bold==true,' bold','')}">
                        {!v.body}
                    </span>
            </div>
            <div class="{!if(or(v.scope.mode=='view',v.showEdit==false),' ',' slds-hide ')  + if(or(v.type=='currency',v.type=='number'),' number-align','') +  if(v.bold==true,' bold','')}">
                <aura:if isTrue="{!v.doneRendering == true}">
                    <s2cor:Data_Field_Display fieldName="{!v.fieldName}" value="{!v.value}" type="{!v.type}" prefix="{!v.prefix}" decimalPlaces="{!v.decimalPlaces}" actionDto="{!v.actionDto}"  valid="{!v.valid}" label="{!v.label}" mode="{!v.scope.mode}" disabled="{!v.disabled}" isReference="{!v.isReference}" onInlineEdit="{!c.onInlineEdit}" inputComponentId="{!v.inputComponentId}" showEdit="{!v.showEdit}"/>
                </aura:if>
            </div>
        </div>
    </aura:if>

</aura:component>